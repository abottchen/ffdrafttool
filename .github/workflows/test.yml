name: Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('ff_draft_assistant/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        cd ff_draft_assistant
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Create test config file
      run: |
        cd ff_draft_assistant
        cp config.json.example config.json

    - name: Lint with ruff
      run: |
        cd ff_draft_assistant
        ruff check src/ tests/
      continue-on-error: false

    - name: Format check with black
      run: |
        cd ff_draft_assistant
        black --check src/ tests/
      continue-on-error: false

    - name: Run tests with pytest
      run: |
        cd ff_draft_assistant
        pytest tests/ -v --cov=src --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ff_draft_assistant/coverage.xml
        fail_ci_if_error: false